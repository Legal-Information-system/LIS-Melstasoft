<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="LegalSystemWeb.SiteMaster" %>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head runat="server">

    <%-- <link href="~/Styles/Site.css" rel="stylesheet" type="text/css" />--%>

    <meta charset="utf-8" http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Dashboard - Melstacorp Legal</title>
    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link href="css/styles.css" rel="stylesheet" />
    <script type="text/javascript" src="https://use.fontawesome.com/releases/v6.1.0/js/all.js" crossorigin="anonymous"></script>
    <script type="text/javascript" src="Scripts/Site.js"></script>
    <script type="text/javascript" src="vendor/chart.js/Chart.js"></script>
    <script type="text/javascript" src="Scripts/sweetalert.min.js"></script>
    <link href="Styles/sweetalert.css" rel="stylesheet" />


    <asp:ContentPlaceHolder ID="HeadContent" runat="server">
    </asp:ContentPlaceHolder>
</head>
<body class="sb-nav-fixed">
    <form runat="server">

        <nav class="sb-topnav navbar navbar-expand navbar-dark bg-dark">
            <!-- Navbar Brand-->
            <a class="navbar-brand ps-3" href="Dashboard.aspx">Melstacorp Legal</a>
            <!-- Sidebar Toggle-->
            <button class="btn btn-link btn-sm order-1 order-lg-0 me-4 me-lg-0" id="sidebarToggle" href="#!"><i class="fas fa-bars"></i></button>
            <!-- Navbar Search-->
            <div class="d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0">
                <%--            <div class="input-group">
                <input class="form-control" type="text" placeholder="Search for..." aria-label="Search for..." aria-describedby="btnNavbarSearch" />
                <button class="btn btn-primary" id="btnNavbarSearch" type="button"><i class="fas fa-search"></i></button>
            </div>--%>
            </div>
            <!-- Navbar-->
            <ul class="navbar-nav ms-auto ms-md-0 me-3 me-lg-4">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-user fa-fw"></i></a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                        <li>
                            <asp:Button ID="btnNotification" runat="server" Text="Notification" CssClass="dropdown-item" OnClick="btnNotification_Click" />
                        </li>

                        <li>
                            <hr class="dropdown-divider" />
                        </li>
                        <li>
                            <asp:Button ID="btnLogout" runat="server" Text="Logout" CssClass="dropdown-item" OnClick="btnLogut_Click" />
                        </li>
                    </ul>
                </li>
            </ul>
        </nav>

        <div id="layoutSidenav">
            <div id="layoutSidenav_nav">

                <nav class="sb-sidenav accordion sb-sidenav-dark" id="sidenavAccordion">
                    <div class="sb-sidenav-menu">
                        <div class="nav">
                            <div class="sb-sidenav-menu-heading">Basic</div>

                            <% if ((userRolePrivileges.Where(x => (x.FunctionId == 20)).Any()
                                                                        && !(userPrivileges.Any(x => (x.FunctionId == 20) && x.IsGrantRevoke == 0))) ||
                                                                        userPrivileges.Any(x => (x.FunctionId == 20) && x.IsGrantRevoke == 1))
                                {
                            %>

                            <a class="nav-link" href="Dashboard.aspx">
                                <div class="sb-nav-link-icon"><i class="fas fa-tachometer-alt"></i></div>
                                Dashboard
                            </a>

                            <% if ((userRolePrivileges.Where(x => (x.FunctionId == 16)).Any()
                                                                       && !(userPrivileges.Any(x => (x.FunctionId == 16) && x.IsGrantRevoke == 0))) ||
                                                                       userPrivileges.Any(x => (x.FunctionId == 16) && x.IsGrantRevoke == 1))
                                {
                            %>
                            <a class="nav-link" href="CreateCase.aspx">
                                <div class="sb-nav-link-icon"><i class="fas fa-plus"></i></div>
                                Create Case
                            </a>
                            <% }
                                if ((userRolePrivileges.Where(x => (x.FunctionId == 21)).Any()
                         && !(userPrivileges.Any(x => (x.FunctionId == 21) && x.IsGrantRevoke == 0))) ||
                         userPrivileges.Any(x => (x.FunctionId == 21) && x.IsGrantRevoke == 1))
                                {
                            %>
                            <a class="nav-link" href="UpdateCaseActivity.aspx">
                                <div class="sb-nav-link-icon"><i class="fas fa-pen"></i></div>
                                Update Case Activity
                            </a>
                            <% }
                                if ((userRolePrivileges.Where(x => (x.FunctionId == 17)).Any()
                         && !(userPrivileges.Any(x => (x.FunctionId == 17) && x.IsGrantRevoke == 0))) ||
                         userPrivileges.Any(x => (x.FunctionId == 17) && x.IsGrantRevoke == 1))
                                {
                            %>
                            <a class="nav-link" href="CreatePaymentMemo.aspx">
                                <div class="sb-nav-link-icon"><i class="fas fa-credit-card"></i></div>
                                Payment Memo
                            </a>

                            <%} %>
                            <%} %>
                            <%  if ((userRolePrivileges.Where(x => (x.FunctionId == 25)).Any()
                         && !(userPrivileges.Any(x => (x.FunctionId == 25) && x.IsGrantRevoke == 0))) ||
                         userPrivileges.Any(x => (x.FunctionId == 25) && x.IsGrantRevoke == 1))
                                {
                            %>
                            <a class="nav-link" href="ViewCases.aspx?name=All">
                                <div class="sb-nav-link-icon"><i class="fas fa-table"></i></div>
                                View Cases
                            </a>
                            <%} %>

                            <%  if ((userRolePrivileges.Where(x => (x.FunctionId == 26)).Any()
                         && !(userPrivileges.Any(x => (x.FunctionId == 26) && x.IsGrantRevoke == 0))) ||
                         userPrivileges.Any(x => (x.FunctionId == 26) && x.IsGrantRevoke == 1))
                                {
                            %>
                            <a class="nav-link" href="ViewPaymentMemo.aspx">
                                <div class="sb-nav-link-icon"><i class="fas fa-table"></i></div>
                                View Payment Memo
                            </a>
                            <%} %>
                            <% if ((userRolePrivileges.Where(x => (x.FunctionId == 19 || x.FunctionId == 18)).Any()
                                                                       && !(userPrivileges.Any(x => (x.FunctionId == 19 || x.FunctionId == 18) && x.IsGrantRevoke == 0))) ||
                                                                       userPrivileges.Any(x => (x.FunctionId == 19 || x.FunctionId == 18) && x.IsGrantRevoke == 1))
                                {
                            %>

                            <a class="nav-link collapsed" href="#" data-bs-toggle="collapse" data-bs-target="#collapseReports" aria-expanded="false" aria-controls="collapseReports">
                                <div class="sb-nav-link-icon"><i class="fas fa-book-open"></i></div>
                                Reports
                                <div class="sb-sidenav-collapse-arrow"><i class="fas fa-angle-down"></i></div>
                            </a>

                            <div class="collapse" id="collapseReports" aria-labelledby="headingTwo" data-bs-parent="#sidenavAccordion">
                                <nav class="sb-sidenav-menu-nested nav">
                                    <% 
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 18)).Any()
                         && !(userPrivileges.Any(x => (x.FunctionId == 18) && x.IsGrantRevoke == 0))) ||
                         userPrivileges.Any(x => (x.FunctionId == 18) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="DailyCases.aspx">Daily Reports</a>
                                    <% }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 19)).Any()
                         && !(userPrivileges.Any(x => (x.FunctionId == 19) && x.IsGrantRevoke == 0))) ||
                         userPrivileges.Any(x => (x.FunctionId == 19) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="MonthlyCases.aspx">Monthly Reports</a>
                                    <%} %>
                                </nav>
                            </div>
                            <%} %>
                            <%if ((userRolePrivileges.Where(x => (x.FunctionId == 22 || x.FunctionId == 23)).Any()
                                                                                                             && !(userPrivileges.Any(x => (x.FunctionId == 22 || x.FunctionId == 23) && x.IsGrantRevoke == 0))) ||
                                                                                                             userPrivileges.Any(x => (x.FunctionId == 22 || x.FunctionId == 23) && x.IsGrantRevoke == 1))
                                { %>
                            <a class="nav-link collapsed" href="#" data-bs-toggle="collapse" data-bs-target="#collapseUserPrivilege" aria-expanded="false" aria-controls="collapseUserPrivilege">
                                <div class="sb-nav-link-icon"><i class="fas fa-book-open"></i></div>
                                User Privilege
                                <div class="sb-sidenav-collapse-arrow"><i class="fas fa-angle-down"></i></div>
                            </a>

                            <div class="collapse" id="collapseUserPrivilege" aria-labelledby="headingTwo" data-bs-parent="#sidenavAccordion">
                                <nav class="sb-sidenav-menu-nested nav">
                                    <% if ((userRolePrivileges.Where(x => (x.FunctionId == 22)).Any()
                                                                   && !(userPrivileges.Any(x => (x.FunctionId == 22) && x.IsGrantRevoke == 0))) ||
                                                                   userPrivileges.Any(x => (x.FunctionId == 22) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="UserPrivileges.aspx">User Privileges</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 23)).Any()
                         && !(userPrivileges.Any(x => (x.FunctionId == 23) && x.IsGrantRevoke == 0))) ||
                         userPrivileges.Any(x => (x.FunctionId == 23) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="UserRolePrivileges.aspx">User Role Privileges</a>
                                    <%} %>
                                </nav>
                            </div>
                            <%} %>


                            <%  var idList = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 31 };
                                bool statement;
                                if (userPrivileges.Any(x => idList.Any(y => x.FunctionId == y && x.IsGrantRevoke == 0)))
                                {
                                    statement = ((userRolePrivileges.Where(x => idList.Any(y => x.FunctionId == y)).Where(z => userPrivileges.Any(a => a.FunctionId == z.FunctionId && a.IsGrantRevoke != 0)).Any())
                                       || userPrivileges.Any(x => idList.Any(y => x.FunctionId == y && x.IsGrantRevoke == 1)));
                                }
                                else
                                {
                                    statement = ((userRolePrivileges.Where(x => idList.Any(y => x.FunctionId == y)).Any())
                                                                          || userPrivileges.Any(x => idList.Any(y => x.FunctionId == y && x.IsGrantRevoke == 1)));
                                }
                                if (statement)
                                {



                            %>

                            <div class="sb-sidenav-menu-heading">Admin</div>

                            <% if ((userRolePrivileges.Where(x => (x.FunctionId == 15)).Any()
                                     && !(userPrivileges.Any(x => (x.FunctionId == 15) && x.IsGrantRevoke == 0))) ||
                                     userPrivileges.Any(x => (x.FunctionId == 15) && x.IsGrantRevoke == 1))
                                {
                            %>
                            <a class="nav-link" href="CreateAccount.aspx">
                                <div class="sb-nav-link-icon"><i class="fas fa-user"></i></div>
                                Create Account
                            </a>
                            <%} %>

                            <% if ((userRolePrivileges.Where(x => (x.FunctionId == 31)).Any()
                                     && !(userPrivileges.Any(x => (x.FunctionId == 31) && x.IsGrantRevoke == 0))) ||
                                     userPrivileges.Any(x => (x.FunctionId == 31) && x.IsGrantRevoke == 1))
                                {
                            %>
                            <a class="nav-link" href="ResetPassword.aspx">
                                <div class="sb-nav-link-icon"><i class="fas fa-user"></i></div>
                                Reset User Passwords
                            </a>
                            <%} %>

                            <% if (userPrivileges.Any(x => idList.Any(y => x.FunctionId == y && x.IsGrantRevoke == 0)))
                                {
                                    statement = ((userRolePrivileges.Where(b => b.FunctionId != 15).Where(x => idList.Any(y => x.FunctionId == y)).Where(z => userPrivileges.Where(b => b.FunctionId != 15).Any(a => a.FunctionId == z.FunctionId && a.IsGrantRevoke != 0)).Any())
                                       || userPrivileges.Where(b => b.FunctionId != 15).Any(x => idList.Any(y => x.FunctionId == y && x.IsGrantRevoke == 1)));
                                }
                                else
                                {
                                    statement = ((userRolePrivileges.Where(b => b.FunctionId != 15).Where(x => idList.Any(y => x.FunctionId == y)).Any())
                                                                          || userPrivileges.Any(x => idList.Any(y => x.FunctionId == y && x.IsGrantRevoke == 1)));
                                }
                                if (statement)
                                {
                            %>


                            <a class="nav-link collapsed" href="#" data-bs-toggle="collapse" data-bs-target="#collapsePages" aria-expanded="false" aria-controls="collapsePages">
                                <div class="sb-nav-link-icon"><i class="fas fa-book-open"></i></div>
                                Utilities
                                <div class="sb-sidenav-collapse-arrow"><i class="fas fa-angle-down"></i></div>
                            </a>
                            <div class="collapse" id="collapsePages" aria-labelledby="headingTwo" data-bs-parent="#sidenavAccordion">
                                <nav class="sb-sidenav-menu-nested nav">
                                    <% if ((userRolePrivileges.Where(x => (x.FunctionId == 5)).Any()
                                     && !(userPrivileges.Any(x => (x.FunctionId == 5) && x.IsGrantRevoke == 0))) ||
                                     userPrivileges.Any(x => (x.FunctionId == 5) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddCompany.aspx">Add Company</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 6)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 6) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 6) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddCompanyUnit.aspx">Add Company Unit</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 10)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 10) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 10) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddLawyer.aspx">Add Lawyer</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 13)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 13) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 13) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddUserRole.aspx">Add User Role</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 7)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 7) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 7) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddCourt.aspx">Add Court</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 11)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 11) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 11) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddLocation.aspx">Add Location</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 8)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 8) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 8) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddCourtLocation.aspx">Add Court Location</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 3)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 3) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 3) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddCaseNature.aspx">Add Case Nature</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 1)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 1) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 1) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddAction.aspx">Add Action</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 2)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 2) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 2) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddActivity.aspx">Add Activity</a>
                                    <%
                                        }
                                        if ((userRolePrivileges.Where(x => (x.FunctionId == 9)).Any()
   && !(userPrivileges.Any(x => (x.FunctionId == 9) && x.IsGrantRevoke == 0))) ||
   userPrivileges.Any(x => (x.FunctionId == 9) && x.IsGrantRevoke == 1))
                                        {
                                    %>
                                    <a class="nav-link" href="AddJudgementType.aspx">Add Judgement Type</a>
                                    <%} %>
                                </nav>
                            </div>
                            <%} %>

                            <%} %>
                        </div>
                        <%-- <div class="sb-sidenav-menu-heading">Admin</div>
                        <a class="nav-link" href="CreateAccount.aspx">
                            <div class="sb-nav-link-icon"><i class="fas fa-user"></i></div>
                            Regiter Users
                        </a>--%>
                        <%--<a class="nav-link" href="">
                                <div class="sb-nav-link-icon"><i class="fas fa-table"></i></div>
                                Tables
                            </a>--%>
                    </div>
                    <div class="sb-sidenav-footer">
                        <div class="small">
                            Logged in as :
                        <asp:Label ID="lblUserName" runat="server" Text=""></asp:Label>
                        </div>
                    </div>
                </nav>
            </div>
            <div id="layoutSidenav_content">
                <main>
                    <div class="container-fluid px-4">
                        <asp:ContentPlaceHolder ID="MainContent" runat="server" />
                    </div>
                </main>
                <footer class="py-4 bg-light mt-auto">
                    <div class="container-fluid px-4">
                        <div class="d-flex align-items-center justify-content-between small">
                            <div class="text-muted">Copyright &copy; MelstaCorp 2022</div>
                            <div>
                                <a href="PrivacyPolicy.aspx">Privacy Policy</a>
                                &middot;
                                <a href="TermsAndConditions.aspx">Terms &amp; Conditions</a>
                            </div>
                        </div>
                    </div>
                </footer>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
        <script src="js/scripts.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js" crossorigin="anonymous"></script>
        <script src="assets/demo/chart-area-demo.js"></script>
        <script src="assets/demo/chart-bar-demo.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" crossorigin="anonymous"></script>
        <script src="js/datatables-simple-demo.js"></script>

    </form>

</body>
</html>
